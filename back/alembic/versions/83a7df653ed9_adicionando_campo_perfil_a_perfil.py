"""Adicionando campo perfil a Perfil

Revision ID: 83a7df653ed9
Revises: 2988e8869fbf
Create Date: 2025-04-19 11:32:05.634930

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '83a7df653ed9'
down_revision: Union[str, None] = '2988e8869fbf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # 1. Adiciona a coluna como nullable e com valor default temporário
    op.add_column('Perfil', sa.Column('perfil', sa.String(length=50), nullable=True, server_default='default_perfil'))

    # 2. Atualize os valores existentes para serem únicos
    op.execute("UPDATE \"Perfil\" SET perfil = 'master_admin' WHERE nome = 'Master Admin'")
    op.execute("UPDATE \"Perfil\" SET perfil = 'gerente' WHERE nome = 'Gerente'")
    op.execute("UPDATE \"Perfil\" SET perfil = 'doctor' WHERE nome = 'Doutor'")
    op.execute("UPDATE \"Perfil\" SET perfil = 'assistant' WHERE nome = 'Assistente'")
    op.execute("UPDATE \"Perfil\" SET perfil = 'frontdesk' WHERE nome = 'Funcionário de Atendimento'")
    op.execute("UPDATE \"Perfil\" SET perfil = 'super_admin' WHERE nome = 'Super Admin'")

    # 3. Torna a coluna NOT NULL e remove o default
    op.alter_column('Perfil', 'perfil', nullable=False, server_default=None)

    # 4. Cria a constraint de unicidade
    op.create_unique_constraint(None, 'Perfil', ['perfil'])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'Perfil', type_='unique')
    op.drop_column('Perfil', 'perfil')
    # ### end Alembic commands ###
